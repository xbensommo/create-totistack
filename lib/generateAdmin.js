import fs from 'fs-extra';
import path from 'path';

export default async function generateAdmin() {
  // Create admin layout
  const authStorePath = `@/stores/appStore`;

  const layoutsDir = 'src/layouts';
  await fs.ensureDir(layoutsDir);
  
  const adminLayoutContent = `<!--
 * @title AdminLayout
 * @description Layout for admin dashboard
 * @author Generated by create-totistack
 * @created ${new Date().toISOString()}
-->
<script setup> 
import { useAuthStore } from '@/stores/authStore';

const authStore = useAuthStore();
</script>

<template>
  <div class="min-h-screen bg-gray-50 flex">
    <!-- Sidebar -->
    <div class="w-64 bg-gray-800 text-white">
      <div class="p-4 border-b border-gray-700">
        <h2 class="text-xl font-bold">Admin Panel</h2>
      </div>
      <nav class="mt-5">
        <router-link 
          to="/admin/dashboard" 
          class="block py-2 px-4 hover:bg-gray-700"
        >
          Dashboard
        </router-link>
        <router-link 
          to="/admin/users" 
          class="block py-2 px-4 hover:bg-gray-700"
        >
          Users
        </router-link>
        <!-- Add more admin links as needed -->
      </nav>
    </div>

    <!-- Main content -->
    <div class="flex-1">
      <header class="bg-white shadow">
        <div class="max-w-7xl mx-auto px-4 py-6 sm:px-6 lg:px-8 flex justify-between items-center">
          <h1 class="text-2xl font-bold text-gray-900">
            <slot name="header"></slot>
          </h1>
          <div class="flex items-center space-x-4">
            <span>{{ authStore.user.email }}</span>
            <button 
              @click="authStore.logout"
              class="px-3 py-1 bg-gray-200 rounded-md hover:bg-gray-300"
            >
              Logout
            </button>
          </div>
        </div>
      </header>
      <main class="p-6">
        <router-view />
      </main>
    </div>
  </div>
</template>`;
  
  await fs.writeFile(path.join(layoutsDir, 'AdminLayout.vue'), adminLayoutContent);
  
  // Create admin views
  const adminViewsDir = 'src/views/admin';
  await fs.ensureDir(adminViewsDir);
  
  // DashboardView.vue
  const dashboardContent = `<!--
 * @title DashboardView
 * @description Admin dashboard overview
 * @author Generated by create-totistack
 * @created ${new Date().toISOString()}
-->
<template>
  <div>
    <h2 class="text-xl font-semibold mb-4">Admin Dashboard</h2>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <div class="bg-white p-6 rounded-lg shadow">
        <h3 class="text-lg font-medium mb-2">Users</h3>
        <p class="text-3xl font-bold">1,024</p>
      </div>
      <div class="bg-white p-6 rounded-lg shadow">
        <h3 class="text-lg font-medium mb-2">Revenue</h3>
        <p class="text-3xl font-bold">$24,580</p>
      </div>
      <div class="bg-white p-6 rounded-lg shadow">
        <h3 class="text-lg font-medium mb-2">Activity</h3>
        <p class="text-3xl font-bold">1,245</p>
      </div>
    </div>
  </div>
</template>`;
  
  await fs.writeFile(path.join(adminViewsDir, 'DashboardView.vue'), dashboardContent);
  
  // UsersView.vue
  const usersContent = `<!--
 * @title UsersView
 * @description Admin user management view
 * @author Generated by create-totistack
 * @created ${new Date().toISOString()}
-->
<script setup>
import { ref } from 'vue';
import { useUserStore } from '@/stores/userStore';

const userStore = useUserStore();
userStore.fetchItems();

const columns = [
  { key: 'email', label: 'Email' },
  { key: 'name', label: 'Name' },
  { key: 'role', label: 'Role' },
  { key: 'actions', label: 'Actions' }
];
</script>

<template>
  <div>
    <div class="flex justify-between items-center mb-6">
      <h2 class="text-xl font-semibold">User Management</h2>
      <button class="px-4 py-2 bg-indigo-600 text-white rounded-md">
        Add User
      </button>
    </div>
    
    <div v-if="userStore.loading" class="text-center py-8">
      Loading users...
    </div>
    
    <div v-else>
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th v-for="col in columns" :key="col.key" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              {{ col.label }}
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <tr v-for="user in userStore.items" :key="user.id">
            <td class="px-6 py-4 whitespace-nowrap">
              {{ user.email }}
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              {{ user.name }}
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                {{ user.role }}
              </span>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
              <button class="text-indigo-600 hover:text-indigo-900 mr-3">Edit</button>
              <button class="text-red-600 hover:text-red-900">Delete</button>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</template>`;
  
  await fs.writeFile(path.join(adminViewsDir, 'UsersView.vue'), usersContent);
}