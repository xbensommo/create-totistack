import fs from 'fs-extra';
import path from 'path';

export default async function generateRouter(answers) {
  const { enableAuth, enableRoles, enableAuthViews, enableAdmin, enableLanding } = answers;
  
  const routerDir = 'src/router';
  await fs.ensureDir(routerDir);
  
  let routes = [];
  
  // Base routes
  if (enableLanding) {
    routes.push({
      path: '/',
      name: 'Home',
      component: 'LandingPage',
      meta: { layout: 'GuestLayout' }
    });
  } else {
    routes.push({
      path: '/',
      name: 'Home',
      component: 'HomeView',
      meta: { layout: 'AppLayout', requiresAuth: true }
    });
  }
  
  // Auth routes
  if (enableAuth && enableAuthViews) {
    routes.push(
      {
        path: '/login',
        name: 'Login',
        component: 'LoginView',
        meta: { layout: 'GuestLayout', guestOnly: true }
      },
      {
        path: '/register',
        name: 'Register',
        component: 'RegisterView',
        meta: { layout: 'GuestLayout', guestOnly: true }
      }
    );
  }
  
  // Admin routes
  if (enableAdmin) {
    routes.push(
      {
        path: '/admin/dashboard',
        name: 'AdminDashboard',
        component: 'DashboardView',
        meta: { 
          layout: 'AdminLayout', 
          requiresAuth: true,
          requiresAdmin: enableRoles
        }
      },
      {
        path: '/admin/users',
        name: 'AdminUsers',
        component: 'UsersView',
        meta: { 
          layout: 'AdminLayout', 
          requiresAuth: true,
          requiresAdmin: enableRoles
        }
      }
    );
  }
  
  // Fallback route
  routes.push({
    path: '/:pathMatch(.*)*',
    redirect: '/'
  });
  
  // Generate router/index.js
  const imports = [
    `import { createRouter, createWebHistory } from 'vue-router'`,
    ...new Set(routes.map(r => `import ${r.component} from '@/views/${r.component}.vue'`)),
    ...(enableAuth ? ["import authGuard from '@/router/guards/authGuard'"] : []),
    ...(enableRoles ? ["import roleGuard from '@/router/guards/roleGuard'"] : []),
    `import AppLayout from '@/layouts/AppLayout.vue'`,
    `import GuestLayout from '@/layouts/GuestLayout.vue'`,
    ...(enableAdmin ? ["import AdminLayout from '@/layouts/AdminLayout.vue'"] : [])
  ].join('\n');
  
  const routesString = JSON.stringify(routes, null, 2)
    .replace(/"component": "(\w+)"/g, '"component": $1');
  
  const guardSetup = [];
  if (enableAuth) guardSetup.push('router.beforeEach(authGuard);');
  if (enableRoles) guardSetup.push('router.beforeEach(roleGuard);');
  
  const content = `/**
 * @title Router Configuration
 * @description Vue Router setup with generated routes
 * @author Generated by create-totistack
 * @created ${new Date().toISOString()}
 */
${imports}

const routes = ${routesString};

const router = createRouter({
  history: createWebHistory(import.meta.env.BASE_URL),
  routes
});

${guardSetup.join('\n')}

export default router;`;
  
  await fs.writeFile(path.join(routerDir, 'index.js'), content);
  
  // Create HomeView if not using landing page
  if (!enableLanding) {
    const viewsDir = 'src/views';
    await fs.ensureDir(viewsDir);
    
    const homeContent = `<!--
 * @title HomeView
 * @description Application home page
 * @author Generated by create-totistack
 * @created ${new Date().toISOString()}
-->
<template>
  <div>
    <h1 class="text-2xl font-bold mb-4">Welcome to the App</h1>
    <p>This is the main application dashboard.</p>
  </div>
</template>`;
    
    await fs.writeFile(path.join(viewsDir, 'HomeView.vue'), homeContent);
  }
}